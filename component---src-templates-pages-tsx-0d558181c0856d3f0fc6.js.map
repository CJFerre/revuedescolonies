{"version":3,"file":"component---src-templates-pages-tsx-0d558181c0856d3f0fc6.js","mappings":"sLAAA,I,kDC6Be,SAASA,EAAT,GAA+D,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,KACvCC,EADmE,EAAtBC,YAC7CD,aACAE,EAAmBH,EAAnBG,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAUF,EAAVE,MAEFC,EAAe,IAAIC,KAAKP,GACdM,EAAaE,UACpBF,EAAaG,WAClBH,EAAaI,cAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAD,CAAQd,SAAUA,EAASe,WACzBF,EAAAA,EAAAA,KAACG,EAAAA,EAAD,CAAKT,MAAOA,KACZM,EAAAA,EAAAA,KAACI,EAAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,OACnCN,EAAAA,EAAAA,KAACO,EAAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAU,KAAKI,cAAc,EAAOC,wBACzD,CAACC,OAAQvB,EAAKwB,KAAKC,aAAaC,cAEpCd,EAAAA,EAAAA,KAACO,EAAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAU,KAAKI,cAAc,EAAOM,GAAI,CAC7DC,aAAc,QACZtB,IACNM,EAAAA,EAAAA,KAACO,EAAAA,EAAD,CACEC,QAAQ,QACRC,cAAc,EACdJ,UAAU,MACVK,wBAAyB,CAAEC,OAAQlB","sources":["webpack://se-microedition-template/./src/utils/months.ts","webpack://se-microedition-template/./src/templates/pages.tsx"],"sourcesContent":["export default [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n]\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport months from \"../utils/months\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Container, Typography } from \"@mui/material\"\n\ninterface Props {\n  location: any\n  data: {\n    site: {\n      siteMetadata: {\n        htmlTitle: string\n      }\n    }\n    markdownRemark: {\n      frontmatter: {\n        title: string\n        date: string\n      }\n      html: string\n    }\n  }\n  pageContext: {\n    modifiedTime: string\n  }\n}\n\nexport default function PageTemplate({ location, data, pageContext }: Props) {\n  const { modifiedTime } = pageContext\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  const { title } = frontmatter\n\n  const modifiedDate = new Date(modifiedTime)\n  const date = `${modifiedDate.getDate()} ${\n    months[modifiedDate.getMonth()]\n  } ${modifiedDate.getFullYear()}`\n\n  return (\n    <Layout location={location.pathname}>\n      <SEO title={title} />\n      <Container component=\"main\" maxWidth=\"md\">\n        <Typography variant=\"h3\" component=\"h2\" gutterBottom={false} dangerouslySetInnerHTML={\n            {__html: data.site.siteMetadata.htmlTitle}\n          } />\n        <Typography variant=\"h4\" component=\"h3\" gutterBottom={false} sx={{\n            marginBottom: \"2em\"\n          }}>{title}</Typography>\n        <Typography\n          variant=\"body1\"\n          gutterBottom={true}\n          component=\"div\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        {/* <div>Last updated: {date}</div> */}\n      </Container>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    site {\n      siteMetadata {\n        htmlTitle\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        path\n      }\n    }\n  }\n`\n"],"names":["PageTemplate","location","data","modifiedTime","pageContext","markdownRemark","frontmatter","html","title","modifiedDate","Date","getDate","getMonth","getFullYear","___EmotionJSX","Layout","pathname","SEO","Container","component","maxWidth","Typography","variant","gutterBottom","dangerouslySetInnerHTML","__html","site","siteMetadata","htmlTitle","sx","marginBottom"],"sourceRoot":""}